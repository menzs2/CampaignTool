@using Microsoft.AspNetCore.Components.Authorization
@using Shared;
@inject CustomAuthenticationStateProvider AuthenticationProvider
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Menu</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="nav flex-column">
        <div class="nav-item px-1">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span>Kampagne
            </NavLink>
        </div>
        @if (isUserAuthenticated)
        {
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="campaign">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span>Übersicht
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="playercharacters">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>SC
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="characters">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>NSC
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="organisations">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Organisationen
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="logout">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="user-settings">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Einstell.
                </NavLink>
            </div>
            @if (isUserAdmin)
            {
                <div class="nav-item px-1">
                    <NavLink class="nav-link" href="admin">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Admin
                    </NavLink>
                </div>
            }
        }
       
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private bool isUserAuthenticated {get; set; }
        
    private bool isUserAdmin { get; set; }

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await AuthenticationProvider.GetAuthenticationStateAsync();
        isUserAuthenticated = result.User.Identity?.IsAuthenticated ?? false;
        isUserAdmin = result.User.IsInRole("Admin");
        AuthenticationProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;
    }
    
    protected void OnAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        isUserAuthenticated = task.Result.User.Identity?.IsAuthenticated ?? false;
        isUserAdmin = task.Result.User.IsInRole("Admin");
        StateHasChanged();
    }

    private async Task<bool> IsUserAdmin()
    {
        var user = await SessionStorage.GetItemAsync<UserDto?>("User");
        return user?.Role == 1;
    }

}
