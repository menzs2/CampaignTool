@page "/characters"

@inject CharacterDataService DataService
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage;
@inject NavigationManager NavigationManager;
@using System.Net.Http.Json
@using Shared;

<PageTitle>Campaign Tool Charaktere</PageTitle>

<h1>Charaktere</h1>
@if (CharactersList != null && CharactersList.Any())
{
    if (SelectedCharacter != null)
    {
        <Frontend.Components.EntityDetailComponent EntityDto="SelectedCharacter" />
    }
    else
    {
        <h2>Bitte w√§hle einen Charakter aus der Liste unten aus.</h2>
        <div>
            <Frontend.Components.ListComponent EntityList="@(CharactersList?.Cast<BaseEntityDto>().ToList())"
                OnNotifyParent="@SelectCharacter" />
        </div>
    }

}
else
{
    <p>Not data found.</p>
}

@code {

    public List<CharacterDto>? CharactersList { get; set; }

    public CharacterDto? SelectedCharacter { get; set; }

    private async Task SelectCharacter(long characterId)
    {
        await SessionStorage.SetItemAsync("SelectedCharacterId", characterId);
        SelectedCharacter = CharactersList?.FirstOrDefault(c => c.Id == characterId);
    }

    protected override async Task OnInitializedAsync()
    {
        if (SessionStorage != null)
        {
            // Load characters from session storage if available
            long? selectedCampaignId = await SessionStorage.GetItemAsync<long?>("SelectedCampaignId");
            long? selectedCharacterId = await SessionStorage.GetItemAsync<long?>("SelectedCharacterId");    
            if (!selectedCampaignId.HasValue)

            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                CharactersList = await DataService.GetCharacterDtosByCampaignAsync(selectedCampaignId.Value);
                if (selectedCharacterId.HasValue)
                {
                    SelectedCharacter = CharactersList?.FirstOrDefault(c => c.Id == selectedCharacterId.Value);
                }
            }
        }
    }
}