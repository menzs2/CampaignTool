@page "/"
@inject CampaignDataService DataService
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage;
@inject NavigationManager NavigationManager;
@inject CustomAuthenticationStateProvider AuthenticationStateProvider;
@using System.Net.Http.Json
@using System.Text.Json
@using Shared;
@using Components;

<PageTitle>Campaign Home</PageTitle>

<h1>Campaing Tool - Kampagnen</h1>

@if (Campaigns != null && Campaigns.Any())
{
    <div>
        <Frontend.Components.ListComponent EntityList="@(Campaigns?.Cast<BaseEntityDto>().ToList())" OnNotifyParent="@SelectCampaign" />
    </div>
}
else
{
    <p>Not data found.</p>
}

@code {

    protected List<CampaignDto>? Campaigns;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (await AuthenticationStateProvider.IsAuthenticated())
            {
                Campaigns = await DataService.GetCampaigns();
            }
            else
            {
                NavigationManager.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void SelectCampaign(long campaignId)
    {
        // Set the campaign to session storage by Id
        SessionStorage.SetItemAsync<long?>("SelectedCampaignId", campaignId);
        NavigationManager.NavigateTo($"/campaign");
    }
}